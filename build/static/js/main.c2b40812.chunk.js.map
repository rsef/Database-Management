{"version":3,"sources":["pictures/logo.png","components/create-account.component.js","components/edit-accounts.component.js","components/list-all-accounts.component.js","components/main-page.component.js","components/thank-you-page.component.js","components/deleted-user.component.js","components/hospitals.component.js","components/hospitalsfiltered.component.js","components/contact-donars.component.js","components/create-donar.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateAccount","props","onChangeFirstName","bind","onChangeLastName","onChangeUsername","onChangeEmail","onChangePassword","onChangeAge","onChangePhone","onChangeSex","onChangeDiseases","onChangeLocation","onSubmit","state","firstname","lastname","username","email","pass","age","phone","sex","diseases","location","e","this","setState","target","value","console","log","newUser","toUpperCase","concat","password","axios","post","url","then","res","data","history","push","style","marginTop","className","type","onChange","name","id","checked","Component","EditAccounts","onChangeBloodType","onChangeWeight","weight","bloodtype","get","match","params","response","catch","error","preventDefault","User","Donar","userID","blood_type","align","Account","user","to","ListAccounts","_ismounted","users","prevProps","map","currentUser","i","key","userList","MainPage","src","homeLogo","alt","ThankYouPage","hospital_name","date_of_report","defaultValue","DeletedUserPage","Hospital","hospital","percentage_stored","Hospitals","hospitals","currentHospital","hospitalList","HospitalFiltered","hospitalfiltered","HospitalsFiltered","filteredhospitals","currentFHospital","fhospitalList","donar","ListDonars","donars","currentDonar","donarList","CreateDonar","App","path","exact","component","EditAccount","DeleteUser","HospitalsFilteredLocation","ContactDonars","CreateDonars","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2b40812.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.852874f1.png\";","import React, { Component } from 'react';\nimport 'react-phone-number-input/style.css'\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\nexport default class CreateAccount extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\n        this.onChangeLastName = this.onChangeLastName.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.onChangePhone = this.onChangePhone.bind(this);\n        this.onChangeSex = this.onChangeSex.bind(this);\n        this.onChangeDiseases = this.onChangeDiseases.bind(this);\n        this.onChangeLocation = this.onChangeLocation.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            firstname: '',\n            lastname: '',            \n            username: '',\n            email: '',\n            pass: '',\n            age: '',\n            phone: '',\n            sex: '',\n            diseases: '',\n            location: ''\n        }\n    }\n\n//Update the current state of object aspect\nonChangeFirstName(e) {\n    this.setState({\n        firstname: e.target.value\n    });\n}\nonChangeLastName(e) {\n    this.setState({\n        lastname: e.target.value\n    });\n}\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            pass: e.target.value\n        });\n    }\n    onChangeAge(e) {\n        this.setState({\n            age: e.target.value\n        });\n    }\n\n    onChangePhone(e) {\n        this.setState({\n            phone: e.target.value\n        });\n    }\n\n    onChangeSex(e) {\n        this.setState({\n            sex: e.target.value\n        });\n    }\n\n    onChangeDiseases(e) {\n        this.setState({\n            diseases: e.target.value\n        });\n    }\n    onChangeLocation(e) {\n        this.setState({\n            location: e.target.value\n        });\n    }    \n    onSubmit(e) { // Reset object after inputting data\n        console.log(`Form submitted:`);\n        console.log(`Firstname: ${this.state.firstname}`);\n        console.log(`Lastname: ${this.state.lastname}`);                \n        console.log(`Username: ${this.state.username}`);\n        console.log(`Email: ${this.state.email}`);\n        console.log(`Password: ${this.state.pass}`);\n        console.log(`Age: ${this.state.age}`);\n        console.log(`Phone: ${this.state.phone}`);\n        console.log(`Sex: ${this.state.sex}`);\n        console.log(`Diseases: ${this.state.diseases}`);\n        console.log(`Diseases: ${this.state.location}`);\n\n        \n        const newUser = {\n            firstname: this.state.firstname.toUpperCase(),\n            lastname: this.state.lastname.toUpperCase(),\n            username: this.state.firstname.concat(\".\" + this.state.lastname),\n            email: this.state.email.toUpperCase(),\n            pass: this.state.password.toUpperCase(),\n            age: this.state.age,\n            phone: this.state.phone,\n            sex: this.state.sex.toUpperCase(),\n            location: this.state.location.toUpperCase()\n        };\n        console.log(newUser)\n        axios.post(url+'/createaccount',newUser).then(res => console.log(res.data));\n        \n        this.setState({\n            firstname: '',\n            lastname: '',            \n            username: '',\n            email: '',\n            pass: '',\n            age: '',\n            sex: '',\n            diseases: '',\n            location: ''            \n        })\n        this.props.history.push('/'+this.state.location);\n    }\n    render() {\n        return (\n            <div style={{marginTop: 10}}>\n                <h3>Sign up here</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>First Name: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.firstname}\n                                onChange={this.onChangeFirstName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Last Name: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.lastname}\n                                onChange={this.onChangeLastName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Phone: </label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\"\n                            value={this.state.phone}\n                            onChange={this.onChangePhone}\n                            />\n                    </div>                    \n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"SexOptions\" \n                                    id=\"SexMale\" \n                                    value=\"Male\"\n                                    checked={this.state.sex==='Male'} \n                                    onChange={this.onChangeSex}\n                                    />\n                            <label className=\"form-check-label\">Male</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"SexOptions\" \n                                    id=\"SexFemale\" \n                                    value=\"Female\" \n                                    checked={this.state.sex==='Female'} \n                                    onChange={this.onChangeSex}\n                                    />\n                            <label className=\"form-check-label\">Female</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Age: </label>\n                        <input \n                                type=\"number\" \n                                className=\"form-control\"\n                                value={this.state.age}\n                                onChange={this.onChangeAge}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Please Choose a Location:    \n                            <select value={this.state.value} onChange={this.onChangeLocation}>\n                                <option value=\"Manhattan\">Manhattan</option>\n                                <option value=\"Bronx\">Bronx</option>\n                                <option value=\"Brooklyn\">Brooklyn</option>\n                                <option value=\"Queens\">Queens</option>\n                                <option value=\"Staten Island\">Staten Island</option>\n                            </select>\n                        </label>\n                    </div>   \n                                     \n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Sign up\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\nexport default class EditAccounts extends Component {\n    \n\n    constructor(props) {\n        super(props);\n\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\n        this.onChangeLastName = this.onChangeLastName.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.onChangePhone = this.onChangePhone.bind(this);\n        this.onChangeSex = this.onChangeSex.bind(this);\n        this.onChangeDiseases = this.onChangeDiseases.bind(this);\n        this.onChangeLocation = this.onChangeLocation.bind(this);\n        this.onChangeBloodType = this.onChangeBloodType.bind(this);\n        this.onChangeWeight = this.onChangeWeight.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            firstname: '',\n            lastname: '',            \n            username: '',\n            email: '',\n            age: '',\n            phone: '',\n            sex: '',\n            diseases: '',\n            location: '',\n            weight: '',\n            bloodtype: ''\n        }\n    }\n\n    componentDidMount() {\n        console.log('did mount edit')\n        axios.get(url+'/edit/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    firstname: response.data[0].firstname,\n                    lastname: response.data[0].lastname,\n                    email: response.data[0].email,\n                    age: response.data[0].age,\n                    phone: response.data[0].phone,\n                    sex: response.data[0].sex,\n                    location: response.data[0].location,\n                    weight: '',\n                    diseases: '',\n                    bloodtype: ''\n                })   \n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n    }\n//Update the current state of object aspect\nonChangeFirstName(e) {\n    this.setState({\n        firstname: e.target.value\n    });\n}\nonChangeLastName(e) {\n    this.setState({\n        lastname: e.target.value\n    });\n}\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            pass: e.target.value\n        });\n    }\n    onChangeAge(e) {\n        this.setState({\n            age: e.target.value\n        });\n    }\n\n    onChangePhone(e) {\n        this.setState({\n            phone: e.target.value\n        });\n    }\n\n    onChangeSex(e) {\n        this.setState({\n            sex: e.target.value\n        });\n    }\n\n    onChangeDiseases(e) {\n        this.setState({\n            diseases: e.target.value\n        });\n    }\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }  \n    onChangeLocation(e) {\n        this.setState({\n            location: e.target.value\n        });\n    }  \n    onChangeBloodType(e) {\n        this.setState({\n            bloodtype: e.target.value\n        });\n    }      \n\n    onSubmit(e) {\n        e.preventDefault();\n        const User = {\n            firstname: this.state.firstname.toUpperCase(),\n            lastname: this.state.lastname.toUpperCase(),\n            username: this.state.firstname.concat('.'+this.state.lastname),\n            email: this.state.email.toUpperCase(),\n            age: this.state.age,\n            phone: this.state.phone,\n            sex: this.state.sex,\n            location: this.state.location.toUpperCase()\n        };\n        const Donar = {\n            userID: this.props.match.params.id,\n            firstname: this.state.firstname.toUpperCase(),\n            lastname: this.state.lastname.toUpperCase(),\n            email: this.state.email.toUpperCase(),\n            diseases: this.state.diseases.toUpperCase(),\n            blood_type: this.state.bloodtype.toUpperCase(),\n            weight: this.state.weight,\n            userID: this.props.match.params.id\n        };\n        console.log(User)\n        axios.post(url+'/update/'+this.props.match.params.id, User)\n            .then(res => console.log(res.data));\n         axios.post(url+'/createDonar/'+this.props.match.params.id, Donar)\n            .then(res => console.log(Donar,\"added this\"));\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3 align=\"center\">Update User Information/Register Donar</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div \n                    className=\"form-group\"> \n                        <label>First Name: </label>\n                        <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.firstname}\n                                onChange={this.onChangeFirstName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Last Name: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.lastname}\n                                onChange={this.onChangeLastName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"SexOptions\" \n                                    id=\"SexMale\" \n                                    value=\"Male\"\n                                    checked={this.state.sex==='Male'} \n                                    onChange={this.onChangeSex}\n                                    />\n                            <label className=\"form-check-label\">Male</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"SexOptions\" \n                                    id=\"SexFemale\" \n                                    value=\"Female\" \n                                    checked={this.state.sex==='Female'} \n                                    onChange={this.onChangeSex}\n                                    />\n                            <label className=\"form-check-label\">Female</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Age: </label>\n                        <input \n                                type=\"number\" \n                                className=\"form-control\"\n                                value={this.state.age}\n                                onChange={this.onChangeAge}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Please Choose a Location:    \n                            <select value={this.state.value} onChange={this.onChangeLocation}>\n                                <option value=\"Manhattan\">Manhattan</option>\n                                <option value=\"Bronx\">Bronx</option>\n                                <option value=\"Brooklyn\">Brooklyn</option>\n                                <option value=\"Queens\">Queens</option>\n                                <option value=\"Staten Island\">Staten Island</option>\n                            </select>\n                        </label>\n                    </div>   \n                    <div className=\"form-group\">\n                        <label>Phone: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.phone}\n                                onChange={this.onChangePhone}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Medical Condition(s): </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.diseases}\n                                onChange={this.onChangeDiseases}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Weight: </label>\n                        <input \n                                type=\"number\" \n                                className=\"form-control\"\n                                value={this.state.weight}\n                                onChange={this.onChangeWeight}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Blood Type: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.bloodtype}\n                                onChange={this.onChangeBloodType}\n                                />\n                    </div>\n                                     \n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Update User and Verify Donar information\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\n\nconst Account = props => (\n    <tr>\n        <td>{props.user.firstname}</td>\n        <td>{props.user.lastname}</td>\n        <td>{props.user.email}</td>\n        <td>{props.user.age}</td>\n        <td>{props.user.phone}</td>\n        <td>{props.user.sex}</td>\n        <td>{props.user.location}</td>\n        <td>\n        <Link to={\"/edit/\"+props.user.userID}>Create/Update Donar</Link>\n        </td>\n        <td>\n        <Link to={\"/delete/\"+props.user.userID}>Delete</Link>\n        </td>\n    </tr>\n    \n)\nexport default class ListAccounts extends Component {\n    _ismounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {users: []};\n    }\n    \n\n        componentDidMount() {\n            console.log('is mounted')\n                axios.get(url +'/users/')\n                    .then(response => {\n                    this.setState({users: response.data});\n                    })\n                    .catch(function (error) {\n                    console.log(error);\n                    })\n        }\n        componentDidUpdate(prevProps) {\n            console.log(prevProps.data)\n            if(prevProps.data !== this.props.data){ // break condition to stop rerendering\n                axios.get(url +'/users/')\n                    .then(response => {\n                    this.setState({users: response.data});\n                    })\n                .catch(function (error) {\n                    console.log('prob',error);\n                })   \n            }\n        }\n        userList() {\n            return this.state.users.map(function(currentUser, i) {\n              console.log('key',i)\n             return <Account user={currentUser} key={i} />;\n                \n            });\n        }\n    \n        render() {\n            return (\n                <div>\n                    <h3>Signup List</h3>\n                    <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                        <thead>\n                            <tr>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                                <th>Age</th>\n                                <th>Phone</th>\n                                <th>Sex</th>\n                                <th>Location</th>\n                                <th>Create Donar</th>\n                                <th>Delete User</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        { this.userList() }\n                         </tbody>\n                    </table>\n                </div>\n            )\n        }\n    }","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './main-page.component.css';\nimport homeLogo from \"../pictures/logo.png\";\n\nexport default class MainPage extends Component {\n    render() {\n        return (\n            <div className= \"mainpage_wrapper\">\n                <h1>Welcome to the main page! Please sign up to donate!</h1>\n                <img className = \"logo\" src ={homeLogo} alt=\"logo\"/>\n            </div>\n            \n\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\nconst Thankyou = props => (\n    <tr>\n        <td>{props.thankyou.firstname}</td>\n        <td>{props.thankyou.lastname}</td>\n        <td>{props.thankyou.hospital_name}</td>\n        <td>{props.thankyou.location}</td>\n        <td>{props.thankyou.date_of_report}</td>\n    </tr>\n    \n)\nexport default class ThankYouPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstname: '',\n            lastname: '',\n            location: '',\n            hospital_name: '',     \n            date_of_report: '',       \n        }\n    }\n    componentDidMount() {\n        console.log('did mount thankyou')\n        axios.get(url+'thankyou/'+this.props.match.params.location)\n            .then(response => {\n                console.log(response,\"test\");  \n                this.setState({\n                    location: response.data[0].location,\n                    hospital_name: response.data[0].hospital_name,\n                    firstname: response.data[0].firstname,\n                    \n                })   \n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n  \n    }\n    render() {\n        return (\n            <div \n            className=\"form-group\"> \n                <label defaultValue= {this.state.location}\n                    >Thank you: </label>\n                <input \n                        type=\"text\"\n                        className=\"form-control\"\n                        defaultValue={this.state.location || \"estset\"}\n                        />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class DeletedUserPage extends Component {\n    componentDidMount() {\n        console.log('is mounted')\n            axios.get('http://localhost:4000/delete/'+this.props.match.params.id)\n                .then(response => {\n                this.setState({users: response.data});\n                })\n                .catch(function (error) {\n                console.log(error);\n                })\n            }\n    render() {\n        return (\n            <div>\n                <div\n                    type=\"text\"\n                    value= {this.props.match.params.id}\n                >\n                <label> Deleted User </label>            \n                </div>\n            </div>\n            \n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\n\nconst Hospital = props => (\n    <tr>\n        <td>{props.hospital.location}</td>\n        <td>{props.hospital.hospital_name}</td>\n        <td>{props.hospital.blood_type}</td>\n        <td>{props.hospital.percentage_stored}</td>\n        <td>{props.hospital.date_of_report}</td>\n        <td>\n        <Link to={\"/contact/\"+props.hospital.location}>See More Info</Link>\n        </td>\n    </tr>\n    \n)\nexport default class Hospitals extends Component {\n    _ismounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {hospitals: []};\n    }\n    \n\n        componentDidMount() {\n            console.log('is mounted hospitals')\n                axios.get(url +'/hospitals/')\n                    .then(response => {\n                    this.setState({hospitals: response.data});\n                    })\n                    .catch(function (error) {\n                    console.log(error);\n                    })\n        }\n        componentDidUpdate(prevProps) {\n            console.log(prevProps.data)\n            if(prevProps.data !== this.props.data){ // break condition to stop rerendering\n                axios.get(url +'/hospitals/')\n                    .then(response => {\n                    this.setState({hospitals: response.data});\n                    })\n                .catch(function (error) {\n                    console.log('prob',error);\n                })   \n            }\n        }\n        onSubmit(e) {\n            e.preventDefault();\n            const hospitals = {\n                location: this.state.location,\n                hospital_name: this.hospital_name,\n                blood_type: this.state.blood_type,\n                percentage_stored: this.percentage_stored,\n                date_of_report: this.date_of_report\n            };\n        }\n        hospitalList() {\n            return this.state.hospitals.map(function(currentHospital, i) {\n              console.log('key',i)\n             return <Hospital hospital={currentHospital} key={i} />;\n                \n            });\n        }\n        onChangeLocation(e) {\n            this.setState({\n                location: e.target.value\n            });\n        }\n        onChangeBloodType(e) {\n            this.setState({\n                blood_type: e.target.value\n            });\n        }        \n    \n        render() {\n            return (\n                <div>\n                    <h3>Hospital Status</h3>                          \n                    <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                        <thead>\n                            <tr>\n                                <th>Hospital Location</th>\n                                <th>Hospital Name</th>\n                                <th>Blood Type</th>\n                                <th>Blood Bags Availiable</th>\n                                <th>As of Date</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                        { this.hospitalList() }\n                         </tbody>\n                    </table>\n                </div>\n            )\n        }\n    }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\n\nconst HospitalFiltered = props => (\n    <tr>\n        <td>{props.hospitalfiltered.location}</td>\n        <td>{props.hospitalfiltered.hospital_name}</td>\n        <td>{props.hospitalfiltered.blood_type}</td>\n        <td>{props.hospitalfiltered.percentage_stored}</td>\n        <td>{props.hospitalfiltered.date_of_report}</td>\n        <td>\n        <Link to={\"/email/\"+props.hospitalfiltered.location+\"/\"+props.hospitalfiltered.blood_type+\"/\"}>Find Elligible Donars</Link>\n        </td>\n    </tr>\n    \n    \n)\nexport default class HospitalsFiltered extends Component {\n    _ismounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {filteredhospitals: []};\n    }\n    \n\n        componentDidMount() {\n            console.log('is mounted hospitals f')\n                axios.get(url +'/hospitals/'+this.props.match.params.location)\n                    .then(response => {\n                    this.setState({filteredhospitals: response.data});\n                    })\n                    .catch(function (error) {\n                    console.log(error);\n                    })\n        }\n        componentDidUpdate(prevProps) {\n            console.log(prevProps.data,\"tst\")\n            if(prevProps.data !== this.props.data){ // break condition to stop rerendering\n                axios.get(url +'/hospitals/'+this.props.match.params.location)\n                    .then(response => {\n                    this.setState({filteredhospitals: response.data});\n                    })\n                .catch(function (error) {\n                    console.log('prob',error);\n                })   \n            }\n        }\n        fhospitalList() {\n            return this.state.filteredhospitals.map(function(currentFHospital, i) {\n              console.log('key',i)\n             return <HospitalFiltered hospitalfiltered={currentFHospital} key={i} />;\n            });\n        }\n        onChangeLocation(e) {\n            this.setState({\n                location: e.target.value\n            });\n        }\n        onChangeBloodType(e) {\n            this.setState({\n                blood_type: e.target.value\n            });\n        }\n        render() {\n            return (\n                <div>\n                    <h3>Hospital Status</h3>                             \n                    <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                        <thead>\n                            <tr>\n                                <th>Hospital Location</th>\n                                <th>Hospital Name</th>\n                                <th>Blood Type</th>\n                                <th>Blood Bags Availiable</th>\n                                <th>As of Date</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                        { this.fhospitalList() }\n                         </tbody>\n                    </table>\n                </div>\n            )\n        }\n    }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\n\nconst Donar = props => (\n    <tr>\n        <td>{props.donar.firstname}</td>\n        <td>{props.donar.lastname}</td>\n        <td>{props.donar.email}</td>\n        <td>{props.donar.phone}</td>\n        <td>{props.donar.location}</td>\n        <td>{props.donar.bloodtype}</td>\n    </tr>\n    \n)\nexport default class ListDonars extends Component {\n    _ismounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {donars: []};\n    }\n    \n\n        componentDidMount() {\n            console.log('is mounted contacts',this.props.match.params)\n                axios.get(url +'/email/'+this.props.match.params.location+\"/\"+this.props.match.params.blood_type)\n                    .then(response => {\n                    this.setState({donars : response.data});\n                    })\n                    .catch(function (error) {\n                    console.log(error);\n                    })\n                    axios.get(url +'/email/'+this.props.match.params.location+\"/\"+this.props.match.params.blood_type)\n                    .then(response => {\n                    this.setState({donars : response.data});\n                    })\n                    .catch(function (error) {\n                    console.log(error);\n                    })\n        }\n        componentDidUpdate(prevProps) {\n            console.log(prevProps.data)\n            if(prevProps.data !== this.props.data){ // break condition to stop rerendering\n                axios.get(url +'/email/'+this.props.match.params.location+\"/\"+this.props.match.params.blood_type)\n                    .then(response => {\n                    this.setState({donars: response.data});\n                    })\n                .catch(function (error) {\n                    console.log('prob',error);\n                })   \n            }\n        }\n        donarList() {\n            return this.state.donars.map(function(currentDonar, i) {\n              console.log('key',i)\n             return <Donar donar={currentDonar} key={i} />;\n                \n            });\n        }\n    \n        render() {\n            return (\n                <div>\n                    <h3>Contact Information for Users With Matching Bloodtypes</h3>\n                    <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                        <thead>\n                            <tr>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th>Location</th>\n                                <th>Blood Type</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                        { this.donarList() }\n                         </tbody>\n                    </table>\n                </div>\n            )\n        }\n    }","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst url = 'http://localhost:4000';\n\nexport default class CreateDonar extends Component {\n    \n\n    constructor(props) {\n        super(props);\n\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\n        this.onChangeLastName = this.onChangeLastName.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.onChangePhone = this.onChangePhone.bind(this);\n        this.onChangeSex = this.onChangeSex.bind(this);\n        this.onChangeDiseases = this.onChangeDiseases.bind(this);\n        this.onChangeLocation = this.onChangeLocation.bind(this);\n        this.onChangeBloodType = this.onChangeBloodType.bind(this);\n        this.onChangeWeight = this.onChangeWeight.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            firstname: '',\n            lastname: '',            \n            username: '',\n            email: '',\n            phone: '',\n            age: '',            \n            sex: '',\n            diseases: '',\n            location: '',\n            blood_type: '',\n            weight: ''\n        }\n    }\n\n    componentDidMount() {\n        console.log('did mount donars')\n        axios.get(url+'/edit/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    firstname: response.data[0].firstname,\n                    lastname: response.data[0].lastname,\n                    email: response.data[0].email,\n                    age: response.data[0].age,\n                    phone: response.data[0].phone,\n                    sex: response.data[0].sex,\n                    location: response.data[0].location,\n                    diseases: response.data[0].diseases,\n                    bloodtype: response.data[0].bloodtype,\n                    weight: response.data[0].weight\n                })   \n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n    }\n//Update the current state of object aspect\nonChangeFirstName(e) {\n    this.setState({\n        firstname: e.target.value\n    });\n}\nonChangeLastName(e) {\n    this.setState({\n        lastname: e.target.value\n    });\n}\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            pass: e.target.value\n        });\n    }\n    onChangeAge(e) {\n        this.setState({\n            age: e.target.value\n        });\n    }\n\n    onChangePhone(e) {\n        this.setState({\n            phone: e.target.value\n        });\n    }\n\n    onChangeSex(e) {\n        this.setState({\n            sex: e.target.value\n        });\n    }\n\n    onChangeDiseases(e) {\n        this.setState({\n            diseases: e.target.value\n        });\n    }\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }  \n    onChangeLocation(e) {\n        this.setState({\n            location: e.target.value\n        });\n    }  \n    onChangeBloodType(e) {\n        this.setState({\n            bloodtype: e.target.value\n        });\n    }          \n\n\n    onSubmit(e) {\n        e.preventDefault();\n        const User = {\n            firstname: this.state.firstname.toUpperCase(),\n            lastname: this.state.lastname.toUpperCase(),\n            username: this.state.firstname.concat(\".\" + this.state.lastname).toUpperCase(),\n            email: this.state.email.toUpperCase(),\n            age: this.state.age,\n            phone: this.state.phone,\n            sex: this.state.sex,\n            location: this.state.location.toUpperCase(),\n            diseases: this.state.diseases.toUpperCase(),\n            blood_type: this.state.bloodtype.toUpperCase(),\n        };\n        const Donar = {\n            firstname: this.state.firstname.toUpperCase(),\n            lastname: this.state.lastname.toUpperCase(),\n            email: this.state.email.toUpperCase(),\n            diseases: this.state.diseases.toUpperCase(),\n            blood_type: this.state.bloodtype.toUpperCase(),\n            weight: this.state.weight        \n        };\n        console.log(User.Donar)\n        axios.post(url+'/update/'+this.props.match.params.id, User)\n            .then(res => console.log(res.data));\n        axios.post(url+'/updateDonar/'+this.props.match.params.id, Donar)\n            .then(res => console.log(res.data));\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3 align=\"center\">Update Donar</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div \n                    className=\"form-group\"> \n                        <label>First Name: </label>\n                        <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.firstname}\n                                onChange={this.onChangeFirstName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Last Name: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.lastname}\n                                onChange={this.onChangeLastName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"SexOptions\" \n                                    id=\"SexMale\" \n                                    value=\"Male\"\n                                    checked={this.state.sex==='Male'} \n                                    onChange={this.onChangeSex}\n                                    />\n                            <label className=\"form-check-label\">Male</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"SexOptions\" \n                                    id=\"SexFemale\" \n                                    value=\"Female\" \n                                    checked={this.state.sex==='Female'} \n                                    onChange={this.onChangeSex}\n                                    />\n                            <label className=\"form-check-label\">Female</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Age: </label>\n                        <input \n                                type=\"number\" \n                                className=\"form-control\"\n                                value={this.state.age}\n                                onChange={this.onChangeAge}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Please Choose a Location:    \n                            <select value={this.state.value} onChange={this.onChangeLocation}>\n                                <option value=\"Manhattan\">Manhattan</option>\n                                <option value=\"Bronx\">Bronx</option>\n                                <option value=\"Brooklyn\">Brooklyn</option>\n                                <option value=\"Queens\">Queens</option>\n                                <option value=\"Staten Island\">Staten Island</option>\n                            </select>\n                        </label>\n                    </div>   \n                    <div className=\"form-group\">\n                        <label>Phone: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.phone}\n                                onChange={this.onChangePhone}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Medical Condition(s): </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.diseases}\n                                onChange={this.onChangeDiseases}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Weight: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.weight}\n                                onChange={this.onChangeWeight}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Blood Type: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.bloodtype}\n                                onChange={this.onChangeBloodType}\n                                />\n                    </div>\n                                     \n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Update Donar\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport CreateAccount from \"./components/create-account.component\";\nimport EditAccount from \"./components/edit-accounts.component\";\nimport ListAccounts from \"./components/list-all-accounts.component\";\nimport MainPage from \"./components/main-page.component\";\nimport ThankYouPage from \"./components/thank-you-page.component\";\nimport DeleteUser from \"./components/deleted-user.component\";\nimport Hospitals from \"./components/hospitals.component\";\nimport HospitalsFilteredLocation from \"./components/hospitalsfiltered.component\";\nimport ContactDonars from \"./components/contact-donars.component\";\nimport CreateDonars from \"./components/create-donar.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to=\"/\" className=\"navbar-brand\">\n              BloodWorX\n            </Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/createaccount\" className=\"nav-link\">\n                    Sign Up To Donate\n                  </Link>\n                </li>  \n                <li className=\"navbar-item\">\n                  <Link to=\"/users\" className=\"nav-link\">\n                    View Sign Up\n                  </Link>\n                </li>  \n                <li className=\"navbar-item\">\n                  <Link to=\"/hospitals\" className=\"nav-link\">\n                    View Current Hospital Blood Levels\n                  </Link>\n                </li>  \n              </ul>\n            </div>\n          </nav>\n          <br />\n          <Route path=\"/\" exact component={MainPage} />\n          <Route path=\"/edit/:id\" component={EditAccount} />\n          <Route path=\"/createaccount\" component={CreateAccount} />\n          <Route path=\"/users\" component={ListAccounts} />\n           <Route path=\"/thankyou\" component={ThankYouPage}/>\n          <Route path=\"/delete/:id\" component={DeleteUser}/>\n          <Route path=\"/hospitals\" component={Hospitals}/>\n          <Route path=\"/contact/:location\" component={HospitalsFilteredLocation}/>\n          <Route path=\"/email/:location/:blood_type\" component={ContactDonars}/>\n          <Route path=\"/donars/:id\" component={CreateDonars}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}